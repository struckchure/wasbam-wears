{
  "version": 3,
  "sources": ["../chart.js/dist/chunks/helpers.segment.js", "../chart.js/dist/chart.esm.js", "../chart.js/auto/auto.esm.js", "dep:chart_js_auto"],
  "sourcesContent": ["/*!\n * Chart.js v3.5.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return point && area && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const baseStyle = readStyle(line.options);\n  const count = points.length;\n  const result = [];\n  let start = segments[0].start;\n  let i = start;\n  for (const segment of segments) {\n    let prevStyle = baseStyle;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext({\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex: line._datasetIndex\n      }));\n      if (styleChanged(style, prevStyle)) {\n        result.push({start: start, end: i - 1, loop: segment.loop, style: prevStyle});\n        prevStyle = style;\n        start = i - 1;\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      result.push({start, end: i - 1, loop: segment.loop, style});\n      start = i - 1;\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { overrides as $, toPadding as A, each as B, getMaximumSize as C, _getParentNode as D, readUsedSize as E, throttled as F, supportsEventListenerOptions as G, HALF_PI as H, _isDomSupported as I, log10 as J, _factorize as K, finiteOrDefault as L, callback as M, _addGrace as N, toDegrees as O, PI as P, _measureText as Q, _int16Range as R, _alignPixel as S, TAU as T, clipArea as U, renderText as V, unclipArea as W, toFont as X, _toLeftRightCenter as Y, _alignStartEnd as Z, _arrayUnique as _, resolve as a, merge as a0, _capitalize as a1, descriptors as a2, isFunction as a3, _attachContext as a4, _createResolver as a5, _descriptors as a6, mergeIf as a7, uid as a8, debounce as a9, _setMinAndMaxByKey as aA, niceNum as aB, almostWhole as aC, almostEquals as aD, _decimalPlaces as aE, _longestText as aF, _filterBetween as aG, _lookup as aH, getHoverColor as aI, clone$1 as aJ, _merger as aK, _mergerIf as aL, _deprecated as aM, toFontString as aN, splineCurve as aO, splineCurveMonotone as aP, getStyle as aQ, fontString as aR, toLineHeight as aS, PITAU as aT, INFINITY as aU, RAD_PER_DEG as aV, QUARTER_PI as aW, TWO_THIRDS_PI as aX, _angleDiff as aY, retinaScale as aa, clearCanvas as ab, setsEqual as ac, _elementsEqual as ad, getAngleFromPoint as ae, _readValueToProps as af, _updateBezierControlPoints as ag, _computeSegments as ah, _boundSegments as ai, _steppedInterpolation as aj, _bezierInterpolation as ak, _pointInLine as al, _steppedLineTo as am, _bezierCurveTo as an, drawPoint as ao, addRoundedRectPath as ap, toTRBL as aq, toTRBLCorners as ar, _boundSegment as as, _normalizeAngle as at, getRtlAdapter as au, overrideTextDirection as av, _textX as aw, restoreTextDirection as ax, noop as ay, distanceBetweenPoints as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, toPercentage as k, listenArrayEvents as l, toDimension as m, formatNumber as n, _angleBetween as o, isNumber as p, _limitValue as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _lookupByKey as w, getRelativePosition as x, _isPointInArea as y, _rlookupByKey as z };\n", "/*!\n * Chart.js v3.5.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n", "import {Chart, registerables} from '../dist/chart.esm';\n\nChart.register(...registerables);\n\nexport default Chart;\n", "import d from \"./node_modules/chart.js/auto/auto.esm.js\";export default d;"],
  "mappings": "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",
  "names": []
}
